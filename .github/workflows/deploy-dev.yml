name: Dev Deploy to Remote Server http://46.101.254.37/

permissions:
  pull-requests: read
  deployments: read
  contents: read

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
  push:
    branches:
      - main

jobs:
  deploy_dev:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@v1.1.0
      env:
        BRANCH: ${{ github.head_ref }}
        ENV: dev
      with:
            host: ${{ secrets.DEV_HOST }}
            key: ${{ secrets.DEV_SSH_KEY }}
            username: ${{ secrets.DEV_USERNAME }}
            script: |
                cd /home/${{ secrets.DEV_USERNAME }}/stuba-asos
                echo "Stopping and removing the containers"
                docker compose -f docker-compose-deploy.yaml down
                echo
                echo "Pulling the latest changes from the repository"
                echo "${{ env.BRANCH }}"
                git fetch
                git checkout "${{ env.BRANCH }}"
                git pull
                echo
                echo "DEV setup"
                echo "env: ${{env.ENV}}"
                echo "REACT_APP_ENV=${{env.ENV}}" > ./frontend/.env.local
                echo "REACT_APP_BACKEND_URL=${{ secrets.DEV_HOST }}" >> ./frontend/.env.local
                ls -l ./frontend/.env.local
                echo
                echo "Building and deploying the project"
                docker compose -f docker-compose-deploy.yaml up --build -d


  test_backend:
    needs: deploy_dev
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@v1.1.0
      env:
        BRANCH: ${{ github.head_ref }}
        ENV: dev
      with:
            host: ${{ secrets.DEV_HOST }}
            key: ${{ secrets.DEV_SSH_KEY }}
            username: ${{ secrets.DEV_USERNAME }}
            script: |
                docker run \
                  --network=stuba-asos_default \
                  -e AUTH_JWT_ALG=HS256 \
                  -e AUTH_JWT_SECRET=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7 \
                  -e DB_URL=postgresql://admin:admin@postgres:5432/stubasos \
                  -e DB_URL_TEST=postgresql://admin:admin@postgres-test:5432/test \
                  stuba-asos-backend:latest /bin/bash -c "pytest -c src/tests/pytest.ini -vv"